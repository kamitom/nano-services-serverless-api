service: tom-http-s3-handler

plugins:
  - serverless-offline
  - serverless-pseudo-parameters

custom:
  stage: ${opt:stage, self:provider.stage}
  region: ${opt:region, self:provider.region}

provider:
  name: aws
  runtime: nodejs8.10
  stage: dev1
  region: ap-northeast-1
  memorySize: 128
  timeout: 12

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:${self:custom.region}:#{AWS::AccountId}:table/*
    - Effect: Allow
      Action:
        # - s3:*
        - s3:Get*
        - s3:List*
        - s3:Put*
      Resource:
        # - "*"
        - "arn:aws:s3:::tom-photos/*"
        - "arn:aws:s3:::tom-photos-dest/*"

functions:
  uploadFunc:
    handler: handler.upload
    # role: arn:aws:iam::461716780826:role/ts-api-test-tom-dev2-ap-northeast-1-lambdaRole

    events:
      - http:
          path: images/
          method: post

resources:
  # DynamoDB
  - ${file(resources/dynamodb-images.yml)}
  # S3
  # - ${file(resources/s3-bucket.yml)}
  # S3 - permission
  # - ${file(resources/s3-permission.yml)}
